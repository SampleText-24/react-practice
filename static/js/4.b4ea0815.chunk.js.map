{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","className","c","dialog","to","id","activeClassName","active","name","Message","message","maxLength40","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","dialogsElement","dialogs","map","d","key","messageElement","messages","m","dialogs_items","values","addMessage","newMessageBody","compose","connect","state","DialogsPage","dispatch","addMessageActionCreator","Component","RedirectComponent","this","isAuth","React","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,cAAgB,+BAA+B,SAAW,4B,oBCA/GD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,8B,oBCAhED,EAAOC,QAAU,CAAC,QAAU,4B,iHCabC,EAVI,SAACC,GAClB,OACE,yBAAKC,UAAWC,IAAEC,QAChB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAEK,QACrDP,EAAMQ,Q,kBCDAC,EAJC,SAACT,GACf,OAAO,yBAAKC,UAAWC,IAAEQ,SAAUV,EAAMU,U,iCCIrCC,EAAcC,YAAiB,IAoBxBC,EAAsBC,YAAU,CAC3CC,KAAM,wBAD2BD,EAlBZ,SAACd,GACtB,OACE,0BAAMgB,SAAUhB,EAAMiB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACEV,KAAM,iBACNW,UAAWC,IACXC,YAAa,qBACbC,SAAU,CAACC,IAAUZ,MAGzB,6BACE,qDCOOa,EAvBC,SAACxB,GACf,IAAIyB,EAAiBzB,EAAM0B,QAAQC,KAAI,SAACC,GAAD,OACrC,kBAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAMqB,IAAKD,EAAEvB,GAAIA,GAAIuB,EAAEvB,QAEzCyB,EAAiB9B,EAAM+B,SAASJ,KAAI,SAACK,GAAD,OACtC,kBAAC,EAAD,CAAStB,QAASsB,EAAEtB,QAASmB,IAAKG,EAAE3B,QAOtC,OACE,yBAAKJ,UAAWC,IAAEwB,SAChB,yBAAKzB,UAAWC,IAAE+B,eAAgBR,GAClC,yBAAKxB,UAAWC,IAAE6B,UAAWD,GAC7B,yBAAK7B,UAAWC,IAAE6B,UAChB,kBAAClB,EAAD,CAAqBG,SATP,SAACkB,GACnBlC,EAAMmC,WAAWD,EAAOE,sB,sDCMbC,sBACbC,aAfoB,SAACC,GACrB,MAAO,CACLb,QAASa,EAAMC,YAAYd,QAC3BK,SAAUQ,EAAMC,YAAYT,aAGP,SAACU,GACxB,MAAO,CACLN,WAAY,SAACC,GACXK,EAASC,YAAwBN,UCZP,SAACO,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAK7C,MAAM8C,OAET,kBAACH,EAAcE,KAAK7C,OAFI,kBAAC,IAAD,CAAUI,GAAI,eAHJ,GACb2C,IAAMJ,WAgBtC,OAJiCL,aAJA,SAACC,GAAD,MAAY,CAC3CO,OAAQP,EAAMS,KAAKF,UAGYR,CAC/BM,KDGWP,CAGbb","file":"static/js/4.b4ea0815.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3RtzZ\",\"dialogs_items\":\"Dialogs_dialogs_items__23wdM\",\"messages\":\"Dialogs_messages__PbPVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__1NPhp\",\"active\":\"DialogsItem_active__1p4wT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Messages_message__3MnNV\"};","import React from \"react\";\nimport c from \"./DialogsItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  return (\n    <div className={c.dialog}>\n      <NavLink to={\"/dialogs/\" + props.id} activeClassName={c.active}>\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import c from \"./Messages.module.css\";\nimport React from \"react\";\n\nconst Message = (props) => {\n  return <div className={c.message}>{props.message}</div>;\n};\n\nexport default Message;\n","import {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../../common/Forms/Forms\";\nimport React from \"react\";\n\nconst maxLength40 = maxLengthCreator(40);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name={\"newMessageBody\"}\n          component={Textarea}\n          placeholder={\"Enter your message\"}\n          validate={[required, maxLength40]}\n        />\n      </div>\n      <div>\n        <button>Send message</button>\n      </div>\n    </form>\n  );\n};\n\nexport const AddMessageReduxForm = reduxForm({\n  form: \"dialogAddMessageForm\",\n})(AddMessageForm);\n","import React from \"react\";\nimport c from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Messages/Messages\";\nimport { AddMessageReduxForm } from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n  let dialogsElement = props.dialogs.map((d) => (\n    <DialogItem name={d.name} key={d.id} id={d.id} />\n  ));\n  let messageElement = props.messages.map((m) => (\n    <Message message={m.message} key={m.id} />\n  ));\n\n  let addNewMessage = (values) => {\n    props.addMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={c.dialogs}>\n      <div className={c.dialogs_items}>{dialogsElement}</div>\n      <div className={c.messages}>{messageElement}</div>\n      <div className={c.messages}>\n        <AddMessageReduxForm onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import React from \"react\";\nimport { addMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogs: state.DialogsPage.dialogs,\n    messages: state.DialogsPage.messages,\n  };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addMessage: (newMessageBody) => {\n      dispatch(addMessageActionCreator(newMessageBody));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n\n/*\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\n\nconst DialogsContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthRedirectComponent);\n\nexport default DialogsContainer;\n*/\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\n\n      return <Component {...this.props} />;\n    }\n  }\n\n  let mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n  });\n\n  let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedRedirectComponent;\n};\n"],"sourceRoot":""}