{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","onSubmit","createField","Input","Textarea","ProfileData","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","contactTitle","contactValue","Contacts","className","c","contact","ProfileInfo","savePhoto","saveProfile","Loader","ava","src","photos","large","userPhoto","type","target","files","length","initialValues","formData","Post","post","alt","message","likes","maxLength10","maxLengthCreator","AddPostReduxForm","Field","name","component","placeholder","validate","required","MyPosts","postsElement","posts","reverse","p","id","post_block","values","addPost","newPostElement","MyPostsContainer","connect","state","ProfilePage","newPostText","dispatch","addPostActionCreator","Profile","match","params","userId","ProfileContainer","this","loggedUserID","history","push","getProfile","getStatus","profileRefresh","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.3745e33a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"ProfileInfo_ava__3Tmw6\",\"contact\":\"ProfileInfo_contact__B27hz\",\"text\":\"ProfileInfo_text__s6mgv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_block\":\"MyPosts_post_block__hYCcE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__39NcM\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  //let stateWithSetState = useState(false);\n  //let editMode = stateWithSetState[0];\n  //let setEditMode = stateWithSetState[1];\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  let activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  let deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <>\n      {!editMode && (\n        <div>\n          <b>Status:</b>{\" \"}\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"Your status can be here!\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport { createField, Input, Textarea } from \"../../common/Forms/Forms\";\nimport { reduxForm } from \"redux-form\";\n\nconst ProfileDataForm = ({ handleSubmit }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <button>Save</button>\n      </div>\n      <div>\n        <b>Full name:</b> {createField(\"Full name\", \"fullName\", Input)}\n      </div>\n      <div>\n        <b>Looking for a job:</b>\n        {createField(\"\", \"lookingForAJob\", Input, \"checkbox\")}\n      </div>\n\n      <div>\n        <b>My professional skills:</b>\n        {createField(\n          \"My professional skills\",\n          \"lookingForAJobDescription\",\n          Textarea\n        )}\n      </div>\n\n      <div>\n        <b>About me:</b> {createField(\"About me\", \"aboutMe\", Textarea)}\n      </div>\n      {/*<div>\n        <b>Contacts:</b>{\" \"}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contacts\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>*/}\n    </form>\n  );\n};\n\nconst ProfileDataFormReduxForm = reduxForm({ form: \"edit-profile\" })(\n  ProfileDataForm\n);\n\nexport default ProfileDataFormReduxForm;\n","import React, { useState } from \"react\";\nimport c from \"./ProfileInfo.module.css\";\nimport Loader from \"../../common/Preloader/Loader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/unnamed.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({\n  profile,\n  status,\n  updateStatus,\n  isOwner,\n  savePhoto,\n  saveProfile,\n}) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <Loader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    saveProfile(formData);\n    setEditMode(false);\n  };\n\n  return (\n    <div>\n      <div>\n        <div className={c.ava}>\n          <img src={profile.photos.large || userPhoto} />\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n          {editMode ? (\n            <ProfileDataForm initialValues={profile} onSubmit={onSubmit} />\n          ) : (\n            <ProfileData\n              profile={profile}\n              isOwner={isOwner}\n              goToEditMode={() => {\n                setEditMode(true);\n              }}\n            />\n          )}\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode}>Edit</button>\n        </div>\n      )}\n      <div>\n        <b>Full name:</b> {profile.fullName}\n      </div>\n      <div>\n        <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n      </div>\n      {profile.lookingForAJob && (\n        <div>\n          <b>My professional skills:</b> {profile.lookingForAJobDescription}\n        </div>\n      )}\n      <div>\n        <b>About me:</b> {profile.aboutMe}\n      </div>\n      <div>\n        <b>Contacts:</b>{\" \"}\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contacts\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Contacts = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={c.contact}>\n      <b>{contactTitle}:</b> {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport c from \"./Post.module.css\";\n\nconst Post = (props) => {\n  return (\n    <div className={c.post}>\n      <img\n        src=\"https://e-cdns-images.dzcdn.net/images/artist/84ff06f377b881b355e0959f750f5a1b/500x500.jpg\"\n        alt=\"\"\n      />\n      {props.message}\n      <div>\n        <span>like </span>\n        {props.likes}\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport c from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {\n  maxLengthCreator,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/Forms/Forms\";\n\nconst MyPosts = (props) => {\n  let postsElement = [...props.posts]\n    .reverse()\n    .map((p) => <Post message={p.message} key={p.id} likes={p.likes} />);\n\n  let addNewPost = (values) => {\n    props.addPost(values.newPostElement);\n  };\n\n  return (\n    <div className={c.post_block}>\n      <h3>My post</h3>\n      <AddPostReduxForm onSubmit={addNewPost} />\n      <div>new post</div>\n      {postsElement}\n    </div>\n  );\n};\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst AddPostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          name={\"newPostElement\"}\n          component={Textarea}\n          placeholder={\"Your text here\"}\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add Post</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddPostReduxForm = reduxForm({\n  form: \"profileAddPostForm\",\n})(AddPostForm);\n\nexport default MyPosts;\n","import React from \"react\";\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.ProfilePage.posts,\n    newPostText: state.ProfilePage.newPostText,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostElement) => {\n      dispatch(addPostActionCreator(newPostElement));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <ProfileInfo\n        isOwner={!props.match.params.userId}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getProfile,\n  getStatus,\n  savePhoto,\n  saveProfile,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends React.Component {\n  profileRefresh() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.loggedUserID;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.profileRefresh();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.profileRefresh();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile\n          {...this.props}\n          isOwner={!this.props.match.params.userId}\n          profile={this.props.profile}\n          status={this.props.status}\n          updateStatus={this.props.updateStatus}\n          savePhoto={this.props.savePhoto}\n        />\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.ProfilePage.profile,\n  status: state.ProfilePage.status,\n  loggedUserID: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n  connect(mapStateToProps, {\n    getProfile,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n  }),\n  withRouter\n  // withAuthRedirect\n)(ProfileContainer);\n"],"sourceRoot":""}